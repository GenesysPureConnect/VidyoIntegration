<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:autoCompleteTextBoxLib="clr-namespace:AutoCompleteTextBoxLib">
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <autoCompleteTextBoxLib:PopupWidthConverter x:Key="PopupWidthConverter" />
    <Style TargetType="{x:Type autoCompleteTextBoxLib:AutoCompleteTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItemDisplayText}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasText}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFocused}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="Transparent" />
                            <Popup x:Name="PART_Popup" 
                              AllowsTransparency="true" 
                              Placement="Bottom" 
                              PopupAnimation="{DynamicResource 
                              {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Popup.Style>
                                    <Style TargetType="Popup">
                                        <Setter Property="IsOpen" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasText, Mode=OneWay}" />
                                        <Setter Property="HorizontalOffset" Value="5" />
                                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={StaticResource PopupWidthConverter}}" />
                                    </Style>
                                </Popup.Style>
                                <Border>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Grid>
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFiltering}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                            <ProgressBar HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FlowDirection="LeftToRight" Orientation="Horizontal" IsIndeterminate="True" />
                                            <Label>Loading...</Label>
                                        </Grid>
                                        <Label FontStyle="Italic" Foreground="Gray">
                                            <Label.Content>
                                                No matches
                                            </Label.Content>
                                            <Label.Style>
                                                <Style TargetType="Label">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasFilteredItems, Mode=OneWay}" Value="False" />
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFiltering}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Label.Style>
                                        </Label>
                                        <ListBox MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ListMaxHeight}" 
                                                 SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}"
                                                 ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilteredSource}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                            <ListBox.Style>
                                                <Style TargetType="ListBox">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasFilteredItems, Mode=OneWay}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.Style>
                                        </ListBox>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
