<UserControl x:Class="VidyoIntegration.VidyoAddin.View.VidyoInteractionDisplayPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:autoCompleteTextBoxLib="clr-namespace:AutoCompleteTextBoxLib;assembly=AutoCompleteTextBoxLib"
             xmlns:helpers="clr-namespace:VidyoIntegration.VidyoAddin.ViewModel.Helpers"
             xmlns:viewModel="clr-namespace:VidyoIntegration.VidyoAddin.ViewModel"
             xmlns:transportClasses="clr-namespace:VidyoIntegration.CommonLib.VidyoTypes.TransportClasses;assembly=VidyoIntegration.CommonLib"
             mc:Ignorable="d" Background="White" Name="TheWindow"
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignData InteractionViewModel}">
    <UserControl.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="2" />
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="CopyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/documents.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Copy to Clipboard" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=TheWindow, Path=HasGuestName}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransferButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="{Binding HasTransferTarget}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/transfer/Transfer 16 n m.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Blind Transfer" />
        </Style>

        <Style x:Key="ConferenceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="{Binding HasTransferTarget}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/transfer/Make Conference 16 n m_add.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Invite to conference" />
        </Style>

        <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/add.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Create Link" />
            <Setter Property="IsEnabled" Value="{Binding Path=HasGuestName}" />
        </Style>

        <Style x:Key="ControlButtonBaseStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsEnabled" Value="{Binding Path=HasGuestName}" />
        </Style>

        <Style x:Key="UnmuteVideoButtonStyle" BasedOn="{StaticResource ControlButtonBaseStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/webcam.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Unmute Video" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/webcam_h.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MuteVideoButtonStyle" BasedOn="{StaticResource ControlButtonBaseStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/webcam_pause.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Mute Video" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/webcam_pause_h.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="UnmuteAudioButtonStyle" BasedOn="{StaticResource ControlButtonBaseStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/loudspeaker.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Unmute Audio" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/loudspeaker_h.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MuteAudioButtonStyle" BasedOn="{StaticResource ControlButtonBaseStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/loudspeaker_pause.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Mute Audio" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/loudspeaker_pause_h.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="KickParticipantButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="4,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/delete.png" />
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Kick Participant" />
            <Setter Property="IsEnabled" Value="{Binding Path=HasGuestName}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush TileMode="None" Stretch="None" AlignmentX="Center" AlignmentY="Center" ImageSource="pack://siteoforigin:,,,/addins/img/controls/delete_h.png" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ControlButtonBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="#66FFFFFF" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="3" />
            <Setter Property="Padding" Value="2,0" />
            <Setter Property="Margin" Value="2,0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#99CCFFCC" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="CollectingInfoTemplate">
            <Border BorderBrush="LightGray" Background="WhiteSmoke" BorderThickness="1" CornerRadius="2" Padding="3,0" Margin="1">
                <DockPanel>
                    <Image Source="pack://siteoforigin:,,,/addins/img/sign_warning.png" 
                           Width="16" Height="16" Margin="1,1,3,1" DockPanel.Dock="Left">
                        <Image.ToolTip>
                            <TextBlock MaxWidth="225" Text="{Binding ErrorMessage}" TextWrapping="Wrap" />
                        </Image.ToolTip>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasErrorMessage}" Value="true">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button DockPanel.Dock="Right" Width="16" Height="16" Margin="3,0"
                            Style="{StaticResource AddButtonStyle}" VerticalAlignment="Center" />
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center">Guest Name:</TextBlock>
                    <TextBox Text="{Binding Path=GuestName, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ProcessingTemplate">
            <Border BorderBrush="LightGray" Background="WhiteSmoke" BorderThickness="1" CornerRadius="2" Padding="3,0" Margin="1">
                <TextBlock VerticalAlignment="Center">Generating guest URL...</TextBlock>
            </Border>
        </DataTemplate>
        
        <DataTemplate x:Key="CompleteTemplate">
            <Border BorderBrush="LightGray" Background="WhiteSmoke" BorderThickness="1" CornerRadius="2" Padding="3,0" Margin="1">
                <DockPanel VerticalAlignment="Center">
                    <Button DockPanel.Dock="Right" VerticalAlignment="Center" Width="16" Height="16" 
                                Margin="3,0"
                                Style="{StaticResource CopyButtonStyle}"  />
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,2,3,2">Guest:</TextBlock>
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,2,8,2" Text="{Binding Path=GuestName}" />
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,2,3,2">URL:</TextBlock>
                    <TextBox Text="{Binding Path=Url, Mode=OneWay}" IsReadOnly="True" BorderThickness="0" Background="Transparent"
                         VerticalAlignment="Center" Margin="0,2,3,2" TextWrapping="NoWrap" />
                </DockPanel>
            </Border>
        </DataTemplate>

        <Style x:Key="GuestUrlStyle" TargetType="ContentControl">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Label>Unknown state</Label>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=State}">
                    <DataTrigger.Value>
                        <helpers:VideoGuestUrlState>CollectingInfo</helpers:VideoGuestUrlState>
                    </DataTrigger.Value>
                    <Setter Property="ContentTemplate" Value="{StaticResource CollectingInfoTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=State}">
                    <DataTrigger.Value>
                        <helpers:VideoGuestUrlState>Processing</helpers:VideoGuestUrlState>
                    </DataTrigger.Value>
                    <Setter Property="ContentTemplate" Value="{StaticResource ProcessingTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=State}">
                    <DataTrigger.Value>
                        <helpers:VideoGuestUrlState>Complete</helpers:VideoGuestUrlState>
                    </DataTrigger.Value>
                    <Setter Property="ContentTemplate" Value="{StaticResource CompleteTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Interaction Id" />
            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=InteractionId, Mode=OneWay}" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Remote Name" />
            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=RemoteName, Mode=OneWay}" />

            <TextBlock Grid.Row="2" Grid.Column="0" Text="State" />
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Path=StateDescription, Mode=OneWay}" />

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Workgroup" />
            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Path=WorkgroupQueueName, Mode=OneWay}" />

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Create Guest URL" />
            <DockPanel Grid.Row="4" Grid.Column="1">
                <Button DockPanel.Dock="Right" VerticalAlignment="Center" Width="16" Height="16" 
                    Margin="3,0" Click="CopyLink_OnClick"
                    Style="{StaticResource CopyButtonStyle}" />
                <TextBlock DockPanel.Dock="Left" Text="Guest name:" />
                <TextBox Text="{Binding ElementName=TheWindow, Path=GuestName, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

            <TextBlock Grid.Row="5" Grid.Column="0" Text="Invite from directory" />
            <DockPanel Grid.Row="5" Grid.Column="1">
                <Button DockPanel.Dock="Right" VerticalAlignment="Center" Width="16" Height="16" 
                    Margin="3,0" Style="{StaticResource TransferButtonStyle}" Click="Transfer_OnClick" />
                <Button DockPanel.Dock="Right" VerticalAlignment="Center" Width="16" Height="16" 
                    Margin="3,0" Style="{StaticResource ConferenceButtonStyle}" Click="Conference_OnClick" />
                <Grid>
                    <autoCompleteTextBoxLib:AutoCompleteTextBox IgnoreAutoCompleteSourceCheck="True" Name="DirectoryFilterBox" 
                                                            ListMaxHeight="80"
                                                            FilterTextChanged="AutoCompleteTextBox_OnFilterTextChanged"
                                                            SelectedItem="{Binding Path=TransferTarget, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </DockPanel>

            <TextBlock Grid.Row="6" Grid.Column="0" Text="Participants" />
            <ItemsControl Grid.Row="6" Grid.Column="1" ItemsSource="{Binding Path=Participants}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="transportClasses:Participant">
                        <Border BorderThickness="1" BorderBrush="LightGray" CornerRadius="2" Padding="3" Margin="1">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="WhiteSmoke" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightSkyBlue" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <DockPanel>
                                <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center" Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=IsMouseOver}" Value="true">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Border Style="{StaticResource ControlButtonBorderStyle}">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Style="{StaticResource UnmuteAudioButtonStyle}" Click="UnmuteAudio_OnClick" />
                                            <Button Style="{StaticResource MuteAudioButtonStyle}" Click="MuteAudio_OnClick" />
                                        </StackPanel>
                                    </Border>
                                    <Border Style="{StaticResource ControlButtonBorderStyle}">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Style="{StaticResource UnmuteVideoButtonStyle}" Click="UnmuteVideo_OnClick" />
                                            <Button Style="{StaticResource MuteVideoButtonStyle}" Click="MuteVideo_OnClick" />
                                        </StackPanel>
                                    </Border>
                                    <Border Style="{StaticResource ControlButtonBorderStyle}">
                                        <StackPanel Orientation="Horizontal">
                                            <Button Style="{StaticResource KickParticipantButtonStyle}" Click="KickParticipant_OnClick" />
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                                <TextBlock VerticalAlignment="Center" Text="{Binding Path=DisplayName}" Margin="0" />
                            </DockPanel>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
            <!-- TODO: Delete this, for debugging only -->
            <Grid Width="8" Height="8" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="7" Grid.Column="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="LightGray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsCheckingParticipants}" Value="false">
                                <Setter Property="Background" Value="LawnGreen" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            
        </Grid>
    </ScrollViewer>
</UserControl>
